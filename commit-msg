#!/usr/bin/env node

const exec = require('child_process').exec;
const fs = require('fs');
const path = require('path');

const STATUS_UPDATE_DIR = path.join(
  require('os').homedir(),
  '.statusupdate',
);
// opens .git/COMMIT_EDITMSG
const commitMessage = fs.readFileSync(process.argv[2]).toString().replace(/\n/g, '');

(async function() {
  try {
    const branchName = await getCurrentBranchName();
    logStatusUpdate(
      `Committed "${commitMessage}" on branch "${branchName}"`,
    );
  } catch (e) {
    console.log('failed to log status update');
    process.exit(0);
  }
})();

function getCurrentBranchName() {
  return new Promise((res, rej) => {
    exec('git rev-parse --abbrev-ref HEAD', (err, stdout, stderr) => {
      if (err) {
        rej(err);
        return;
      }

      res(stdout);
    });
  });
}

function logStatusUpdate(message) {
  if (!fs.existsSync(STATUS_UPDATE_DIR)){
    fs.mkdirSync(STATUS_UPDATE_DIR);
  }

  const padStart = (num) => num < 10 ? `0${num}` : num;
  const now = new Date();
  const [dd, mm, yyyy] = [
    now.getDate(),
    now.getMonth(),
    now.getFullYear(),
  ].map(padStart);
  const filename = `${dd}${mm}${yyyy}`;
  const filepath = path.join(STATUS_UPDATE_DIR, filename);

  fs.appendFileSync(filepath, message);
}
